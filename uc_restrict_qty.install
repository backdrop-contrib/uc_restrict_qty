<?php

/**
 * @file
 * uc_restrict_qty module install file.
 */

/**
 * Implements hook_schema().
 *
 * @return
 *   The schema which contains the structure for the uc_restrict_qty module's tables.
 */
function uc_restrict_qty_schema() {
  $schema['uc_restrict_qty_products'] = array(
    'fields' => array(
      'rqpid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'pfid' => array(
        'description' => t('The ID of the product feature this is attached to.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'nid' => array(
        'description' => t('The ID of the node this role feature is attached to.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'model' => array(
        'description' => t('The product model.'),
        'type' => 'varchar',
        'length' => 255,
        'default' => NULL,
      ),
      'qty' => array(
        'description' => t('The quantity restriction.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'all_variations' => array(
        'description' => t('Count all product variations?'),
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
      'lifetime' => array(
        'description' => t('Is restriction lifetime?'),
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 1,
      ),
    ),
    'indexes' => array(
      'nid' => array('nid'),
      'model' => array('model'),
    ),
    'primary key' => array('rqpid'),
  );
  return $schema;
}

/**
 * Migrate uc_restrict_qty variables to config.
 */
function uc_restrict_qty_update_1000() {
  $config = config('uc_restrict_qty.settings');
  $config->set('uc_restrict_qty_global', update_variable_get('uc_restrict_qty_global', '0'));
  $config->set('uc_restrict_qty_global_replace', update_variable_get('uc_restrict_qty_global_replace', array()));
  $config->set('uc_restrict_qty_default_qty', update_variable_get('uc_restrict_qty_default_qty', '0'));
  $config->set('uc_restrict_qty_default_lifetime', update_variable_get('uc_restrict_qty_default_lifetime', array()));
  $config->save();

  update_variable_del('uc_restrict_qty_global');
  update_variable_del('uc_restrict_qty_global_replace');
  update_variable_del('uc_restrict_qty_default_qty');
  update_variable_del('uc_restrict_qty_default_lifetime');
}

/** 
 * Add the all_variations column to the uc_restrict_qty_products configuration table.
 */
function uc_restrict_qty_update_1200() {
  
  if (db_field_exists('uc_restrict_qty_products', 'all_variations')) {
    return;
  }
  $schema = array(
    'description' => t('Count all product variations?'),
    'type' => 'int',
    'size' => 'tiny',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 1,
  );
  db_add_field('uc_restrict_qty_products', 'all_variations', $schema);
}
